Maps_Newspapers_Unique <- leaflet()%>%
addTiles()%>%
addMarkers(lng=places$Longtitude,
lat=places$Latitude,
popup=paste(places$Description))
#making a basic map
Maps_Newspapers_Unique <- leaflet()%>%
addTiles()%>%
addMarkers(lng=Newspapers_Unique$Longtitude,
lat=Newspapers_Unique$Latitude,
popup=paste(places$Description))
#making a basic map
Maps_Newspapers_Unique <- leaflet()%>%
addTiles()%>%
addMarkers(lng=Newspapers_Unique$Longtitude,
lat=Newspapers_Unique$Latitude,
popup=paste(Newspapers_Unique$Description))
Maps_Newspapers_Unique
# adding esri to the map
esri <- grep("^Esri", providers, value = TRUE)
for (provider in esri) {
Maps_Newspapers_esri <- Maps_Newspapers_Unique %>% addProviderTiles(provider, group = provider)
}
#reading in the sheet
Newspapers_Unique <- read_sheet("https://docs.google.com/spreadsheets/d/1yBqisqe8oF5PEJI3_Rlo1cgRaR84rKHmhJFgNzfkQc4/edit?gid=0#gid=0",
col_types = "ccnnc",range = "Ark1")
glimpse(Newspapers_Unique)
#reading in the sheet
Newspapers_Unique <- read_sheet("https://docs.google.com/spreadsheets/d/1yBqisqe8oF5PEJI3_Rlo1cgRaR84rKHmhJFgNzfkQc4/edit?gid=0#gid=0",
col_types = "ccnnc",range = "Ark1")
glimpse(Newspapers_Unique)
#making a basic map
Maps_Newspapers_Unique <- leaflet()%>%
addTiles()%>%
addMarkers(lng=Newspapers_Unique$Longtitude,
lat=Newspapers_Unique$Latitude,
popup=paste(Newspapers_Unique$Description))
#making a basic map
Maps_Newspapers_Unique <- leaflet()%>%
addTiles()%>%
addMarkers(lng=Newspapers_Unique$Longtitude,
lat=Newspapers_Unique$Latitude,
popup=paste(Newspapers_Unique$Newspaper))
Maps_Newspapers_Unique
# adding esri to the map
esri <- grep("^Esri", providers, value = TRUE)
for (provider in esri) {
Maps_Newspapers_esri <- Maps_Newspapers_Unique %>% addProviderTiles(provider, group = provider)
}
Maps_Newspapers_final <- Maps_Newspapers_esri %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = T)) %>% #adds layer controls
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>% #adds minimap
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")%>%
addMarkers(lng=Newspapers_Unique$Longtitude,
lat=Newspapers_Unique$Latitude,
popup=paste(Newspapers_Unique$Newspaper),clusterOptions = markerClusterOptions())
Maps_Newspapers_final
saveWidget(Maps_Newspapers_final, "Maps_Newspapers.html", selfcontained = TRUE)
library(tidyverse)
library(googlesheets4)
library(leaflet)
library(htmlwidgets)
gs4_deauth() #just to make sure the spreadsheet is accessible
#reading in the sheet
Newspapers_Unique <- read_sheet("https://docs.google.com/spreadsheets/d/1yBqisqe8oF5PEJI3_Rlo1cgRaR84rKHmhJFgNzfkQc4/edit?gid=0#gid=0",
col_types = "ccnnc",range = "Ark1")
glimpse(Newspapers_Unique)
#making a basic map
Maps_Newspapers_Unique <- leaflet()%>%
addTiles()%>%
addMarkers(lng=Newspapers_Unique$Longtitude,
lat=Newspapers_Unique$Latitude,
popup=paste(Newspapers_Unique$Newspaper))
Maps_Newspapers_Unique
# adding esri to the map
esri <- grep("^Esri", providers, value = TRUE)
for (provider in esri) {
Maps_Newspapers_esri <- Maps_Newspapers_Unique %>% addProviderTiles(provider, group = provider)
}
Maps_Newspapers_final <- Maps_Newspapers_esri %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = T)) %>% #adds layer controls
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>% #adds minimap
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")%>%
addMarkers(lng=Newspapers_Unique$Longtitude,
lat=Newspapers_Unique$Latitude,
popup=paste(Newspapers_Unique$Newspaper),clusterOptions = markerClusterOptions())
Maps_Newspapers_final
library(tidyverse)
library(googlesheets4)
library(leaflet)
library(htmlwidgets)
gs4_deauth() #just to make sure the spreadsheet is accessible
#reading in the sheet
Newspapers_Unique <- read_sheet("https://docs.google.com/spreadsheets/d/1yBqisqe8oF5PEJI3_Rlo1cgRaR84rKHmhJFgNzfkQc4/edit?gid=0#gid=0",
col_types = "ccnnc",range = "Ark1")
glimpse(Newspapers_Unique)
#making a basic map
Maps_Newspapers_Unique <- leaflet()%>%
addTiles()%>%
addMarkers(lng=Newspapers_Unique$Longtitude,
lat=Newspapers_Unique$Latitude,
popup=paste(Newspapers_Unique$Newspaper))
Maps_Newspapers_Unique
# adding esri to the map
esri <- grep("^Esri", providers, value = TRUE)
for (provider in esri) {
Maps_Newspapers_esri <- Maps_Newspapers_Unique %>% addProviderTiles(provider, group = provider)
}
Maps_Newspapers_final <- Maps_Newspapers_esri %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = T)) %>% #adds layer controls
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>% #adds minimap
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")%>%
addMarkers(lng=Newspapers_Unique$Longtitude,
lat=Newspapers_Unique$Latitude,
popup=paste(Newspapers_Unique$Newspaper),clusterOptions = markerClusterOptions(freezeAtZoom = FALSE))
Maps_Newspapers_final
Maps_Newspapers_final <- Maps_Newspapers_esri %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = T)) %>% #adds layer controls
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>% #adds minimap
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")%>%
addMarkers(lng=Newspapers_Unique$Longtitude,
lat=Newspapers_Unique$Latitude,
popup=paste(Newspapers_Unique$Newspaper,"<br>"),clusterOptions = markerClusterOptions(freezeAtZoom = TRUE))
Maps_Newspapers_final
# Libraries
library(tidyverse)
library(googlesheets4)
library(leaflet)
# Task 1: Create a Danish equivalent of AUSmap with Esri layers,
# but call it DANmap. You will need it layer as a background for Danish data points.
l_dan <- leaflet()%>%
setView(10.05,56.46,zoom = 6)%>%
addTiles()
l_dan
for (provider in esri) {
l_dan <- l_dan %>% addProviderTiles(provider, group = provider)
}
l_dan
DANmap <- l_dan %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = FALSE)) %>% #adds layer controls
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>% #adds minimap
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")
DANmap
# If you experience difficulty with your read_sheet() function (it is erroring out),
# uncomment and run the following function:
gs4_deauth()  # run this line and then rerun the read_sheet() function below
# Read in the Google sheet you've edited
places <- read_sheet("https://docs.google.com/spreadsheets/d/1PlxsPElZML8LZKyXbqdAYeQCDIvDps2McZx1cTVWSzI/edit?gid=148633452#gid=148633452",
col_types = "cccnncnc",   # check that you have the right number and type of columns
range = "DAM2025")  # select the correct worksheet name
glimpse(places)
# If your coordinates look good, see how you can use addMarkers() function to
# load them in a basic map. Run the lines below and check: are any points missing? Why?
leaflet() %>%
addTiles() %>%
addMarkers(lng = places$Longitude,
lat = places$Latitude,
popup = paste(places$Description, "<br>", places$Type))
# Task 2: Read in the googlesheet data you and your colleagues created
# into your DANmap object (with 11 background layers you created in Task 1).
DANmap_markers <- l_dan %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = FALSE)) %>% #adds layer controls
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>% #adds minimap
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")%>%
addMarkers(lng = places$Longitude,
lat = places$Latitude,
)
DANmap_markers
# Task 3: Can you cluster the points in Leaflet?
# Hint: Google "clustering options in Leaflet in R"
DANmap_markers_cluster <- l_dan %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = FALSE)) %>% #adds layer controls
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>% #adds minimap
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")%>%
addMarkers(lng = places$Longitude,
lat = places$Latitude,
clusterOptions = markerClusterOptions())
DANmap_markers_cluster
# Solution
DANmap_markers_cluster_popup <- l_dan %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = T)) %>% #adds layer controls
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>% #adds minimap
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")%>%
addMarkers(lng = places$Longitude,
lat = places$Latitude,
popup = paste(places$Description, "<br>", places$Type),clusterOptions = markerClusterOptions())
DANmap_markers_cluster_popup
Maps_Newspapers_final <- Maps_Newspapers_esri %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = T)) %>% #adds layer controls
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>% #adds minimap
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")%>%
addMarkers(lng=Newspapers_Unique$Longtitude,
lat=Newspapers_Unique$Latitude,
popup=paste(Newspapers_Unique$City,"<br>",Newspapers_Unique$Newspaper),clusterOptions = markerClusterOptions())
Maps_Newspapers_final
DANmap_markers_cluster_popup
Maps_Newspapers_final
Maps_Newspapers_final <- Maps_Newspapers_esri %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = T)) %>% #adds layer controls
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>% #adds minimap
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")%>%
addMarkers(lng=Newspapers_Unique$Longtitude,
lat=Newspapers_Unique$Latitude,
popup=paste(Newspapers_Unique$Newspaper),clusterOptions = markerClusterOptions())
Maps_Newspapers_final
Maps_Newspapers_final <- Maps_Newspapers_esri %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = T)) %>% #adds layer controls
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>% #adds minimap
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")%>%
addMarkers(lng=Newspapers_Unique$Longtitude,
lat=Newspapers_Unique$Latitude,
popup=paste(Newspapers_Unique$Newspaper),clusterOptions = markerClusterOptions(showCoverageOnHover = T))
Maps_Newspapers_final
library(tidyverse)
library(googlesheets4)
library(leaflet)
library(htmlwidgets)
gs4_deauth() #just to make sure the spreadsheet is accessible
#reading in the sheet
Newspapers_Unique <- read_sheet("https://docs.google.com/spreadsheets/d/1yBqisqe8oF5PEJI3_Rlo1cgRaR84rKHmhJFgNzfkQc4/edit?gid=0#gid=0",
col_types = "ccnnc",range = "Ark1")
glimpse(Newspapers_Unique)
#reading in the sheet
Newspapers_Unique <- read_sheet("https://docs.google.com/spreadsheets/d/1yBqisqe8oF5PEJI3_Rlo1cgRaR84rKHmhJFgNzfkQc4/edit?gid=0#gid=0",
col_types = "ccnnc",range = "Ark1")
glimpse(Newspapers_Unique)
#making a basic map
Maps_Newspapers_Unique <- leaflet()%>%
addTiles()%>%
addMarkers(lng=Newspapers_Unique$Longtitude,
lat=Newspapers_Unique$Latitude,
popup=paste(Newspapers_Unique$Newspaper))
Maps_Newspapers_Unique
# adding esri to the map
esri <- grep("^Esri", providers, value = TRUE)
for (provider in esri) {
Maps_Newspapers_esri <- Maps_Newspapers_Unique %>% addProviderTiles(provider, group = provider)
}
#making a prettier map with esri and clustered popups
Newspapers_Unique <- read_sheet("https://docs.google.com/spreadsheets/d/1yBqisqe8oF5PEJI3_Rlo1cgRaR84rKHmhJFgNzfkQc4/edit?gid=0#gid=0",
col_types = "ccnnc",range = "Ark1")
Maps_Newspapers_cluster <- leaflet()%>%
addTiles()%>%
addMarkers(lng = Newspapers_Unique$Longtitude,
lat = Newspapers_Unique$Latitude,
popup = paste(Newspapers_Unique$Newspaper), clusterOptions = markerClusterOptions(freezeAtZoom = FALSE))
for (provider in esri) {
Maps_Newspapers_cluster <- Maps_Newspapers_cluster %>% addProviderTiles(provider, group = provider)
}
Maps_Newspapers_clustered <- Maps_Newspapers_cluster %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = FALSE)) %>%
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")
Maps_Newspapers_clustered
library(tidyverse)
library(googlesheets4)
library(leaflet)
library(htmlwidgets)
gs4_deauth() #just to make sure the spreadsheet is accessible
#reading in the sheet
Newspapers_Unique <- read_sheet("https://docs.google.com/spreadsheets/d/1yBqisqe8oF5PEJI3_Rlo1cgRaR84rKHmhJFgNzfkQc4/edit?gid=0#gid=0",
col_types = "ccnnc",range = "Ark1")
glimpse(Newspapers_Unique)
#making a basic map
Maps_Newspapers_Unique <- leaflet()%>%
addTiles()%>%
addMarkers(lng=Newspapers_Unique$Longtitude,
lat=Newspapers_Unique$Latitude,
popup=paste(Newspapers_Unique$Newspaper))
Maps_Newspapers_Unique
# adding esri to the map
esri <- grep("^Esri", providers, value = TRUE)
for (provider in esri) {
Maps_Newspapers_esri <- Maps_Newspapers_Unique %>% addProviderTiles(provider, group = provider)
}
#making a prettier map with esri and clustered popups
Newspapers_Unique <- read_sheet("https://docs.google.com/spreadsheets/d/1yBqisqe8oF5PEJI3_Rlo1cgRaR84rKHmhJFgNzfkQc4/edit?gid=0#gid=0",
col_types = "ccnnc",range = "Ark1")
Maps_Newspapers_cluster <- leaflet()%>%
addTiles()%>%
addMarkers(lng = Newspapers_Unique$Longtitude,
lat = Newspapers_Unique$Latitude,
popup = paste(Newspapers_Unique$Newspaper), clusterOptions = markerClusterOptions(freezeAtZoom = FALSE))
for (provider in esri) {
Maps_Newspapers_cluster <- Maps_Newspapers_cluster %>% addProviderTiles(provider, group = provider)
}
Maps_Newspapers_clustered <- Maps_Newspapers_cluster %>%
addLayersControl(baseGroups = names(esri),
options = layersControlOptions(collapsed = FALSE)) %>%
addMiniMap(tiles = esri[[1]], toggleDisplay = TRUE,
position = "bottomright") %>%
addMeasure(
position = "bottomleft",
primaryLengthUnit = "meters",
primaryAreaUnit = "sqmeters",
activeColor = "#3D535D",
completedColor = "#7D4479") %>%
htmlwidgets::onRender("
function(el, x) {
var myMap = this;
myMap.on('baselayerchange',
function (e) {
myMap.minimap.changeLayer(L.tileLayer.provider(e.name));
})
}") %>%
addControl("", position = "topright")
Maps_Newspapers_clustered
#incase google spreadsheet is unavailable, remove the hashtag from line 15
read_csv("data/Newspapers_Places_Unique - Ark1.csv")
#incase google spreadsheet is unavailable, remove the hashtag from line 15
Newspapers_Unique <- read_csv("data/Newspapers_Places_Unique - Ark1.csv")
glimpse(Newspapers_Unique)
#reading in the sheet
Newspapers_Unique <- read_sheet("https://docs.google.com/spreadsheets/d/1yBqisqe8oF5PEJI3_Rlo1cgRaR84rKHmhJFgNzfkQc4/edit?gid=0#gid=0",
col_types = "ccnnc",range = "Ark1")
glimpse(Newspapers_Unique)
#incase google spreadsheet is unavailable, remove the hashtag from line 15
Newspapers_Unique <- read_csv("data/Newspapers_Places_Unique - Ark1.csv")
glimpse(Newspapers_Unique)
View(Newspapers_Unique)
